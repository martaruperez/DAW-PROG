<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker"><property name="charset" value="UTF-8"/>
<property name="severity" value="warning"/>
<property name="fileExtensions" value="java"/>
<module name="BeforeExecutionExclusionFileFilter"><property name="fileNamePattern" value="module\-info\.java$"/>
</module>
<module name="BeforeExecutionExclusionFileFilter"><property name="fileNamePattern" value=".*[\\/]src[\\/]test[\\/].*$"/>
</module>
<module name="FileLength"><property name="max" value="400"/>
<property name="fileExtensions" value="java"/>
</module>
<module name="SuppressionFilter"><property default="checkstyle-suppressions.xml" name="file" value="${org.checkstyle.google.suppressionfilter.config}"/>
<property name="optional" value="true"/>
</module>
<module name="TreeWalker"><module name="Regexp"><property name="format" value="System\.exit"/>
<property name="illegalPattern" value="true"/>
<property name="ignoreComments" value="true"/>
<property name="message" value="No se puede usar System.exit()"/>
</module>
<module name="OuterTypeFilename"/>
<module name="IllegalTokenText"><property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
<property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
<property name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
</module>
<module name="AvoidEscapedUnicodeCharacters"><property name="allowEscapesForControlCharacters" value="true"/>
<property name="allowByTailComment" value="true"/>
<property name="allowNonPrintableEscapes" value="true"/>
</module>
<module name="AvoidStarImport"/>
<module name="UnusedImports"/>
<module name="OneTopLevelClass"/>
<module name="EmptyBlock"><property name="option" value="TEXT"/>
<property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
</module>
<module name="NeedBraces"><property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
</module>
<module name="SuppressionXpathSingleFilter"><property name="id" value="RightCurlyAlone"/>
<property name="query" value="//RCURLY[parent::SLIST[count(./*)=1]                                      or preceding-sibling::*[last()][self::LCURLY]]"/>
</module>
<module name="OneStatementPerLine"/>
<module name="MagicNumber"><property name="ignoreNumbers" value="-1, 0, 1, 2, 3, 4"/>
<property name="ignoreAnnotation" value="true"/>
</module>
<module name="MultipleVariableDeclarations"/>
<module name="ArrayTypeStyle"/>
<module name="MissingSwitchDefault"/>
<module name="FallThrough"/>
<module name="UpperEll"/>
<module name="UnusedLocalVariable"/>
<module name="ModifierOrder"/>
<module name="PackageName"><property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
<message value="Package name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="TypeName"><property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,                     ANNOTATION_DEF, RECORD_DEF"/>
<message value="Type name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="MemberName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Member name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="ParameterName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Parameter name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="LambdaParameterName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Lambda parameter name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="CatchParameterName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Catch parameter name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="LocalVariableName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Local variable name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="PatternVariableName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Pattern variable name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="ClassTypeParameterName"><property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
<message value="Class type name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="RecordComponentName"><property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
<message value="Record component name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="RecordTypeParameterName"><property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
<message value="Record type name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="MethodTypeParameterName"><property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
<message value="Method type name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="InterfaceTypeParameterName"><property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
<message value="Interface type name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="ConstantName"><property name="format" value="^log(ger)?|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
</module>
<module name="NoFinalizer"/>
<module name="AbbreviationAsWordInName"><property name="ignoreFinal" value="true"/>
<property name="allowedAbbreviationLength" value="0"/>
<property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,                     PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF,                     RECORD_COMPONENT_DEF"/>
</module>
<module name="BooleanExpressionComplexity"/>
<module name="ExecutableStatementCount"><property name="max" value="70"/>
</module>
<module name="MethodLength"><property name="max" value="70"/>
<property name="countEmpty" value="false"/>
</module>
<module name="ParameterNumber"/>
<module name="VariableDeclarationUsageDistance"><property name="allowedDistance" value="4"/>
</module>
<module name="MethodName"><property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
<message value="Method name ''{0}'' must match pattern ''{1}''." key="name.invalidPattern"/>
</module>
<module name="EmptyCatchBlock"><property name="exceptionVariableName" value="expected"/>
</module>
<module name="SuppressionXpathFilter"><property default="checkstyle-xpath-suppressions.xml" name="file" value="${org.checkstyle.google.suppressionxpathfilter.config}"/>
<property name="optional" value="true"/>
</module>
<module name="VisibilityModifier"><property name="severity" value="error"/>
<property name="packageAllowed" value="false"/>
</module>
</module>
</module>
